# 第一阶段：构建二进制文件
FROM golang:1.21-alpine AS builder

WORKDIR /app

# 复制 go.mod 和 go.sum，先下载依赖（加速构建缓存）
COPY go.mod go.sum ./
RUN go mod download

# 复制全部源码
COPY . .

# 设置环境变量，关闭 CGO
ENV CGO_ENABLED=0
ENV GOOS=linux
ENV GOARCH=amd64

# 编译可执行文件
RUN go build -ldflags="-s -w" -tags=jsoniter -o /app/bin/qwq-server ./cmd/server/main.go

# 第二阶段：构建运行镜像，包含静态资源
FROM alpine:latest

WORKDIR /app

# 复制可执行文件和资源
COPY --from=builder /app/bin/qwq-server ./qwq-server
COPY --from=builder /app/resources ./resources
COPY --from=builder /app/configs ./configs
COPY --from=builder /app/web ./web

# 暴露端口（根据你的服务端口调整）
EXPOSE 8080

# 运行程序
ENTRYPOINT ["./qwq-server"]
